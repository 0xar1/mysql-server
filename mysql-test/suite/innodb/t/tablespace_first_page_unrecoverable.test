--source include/have_debug.inc

call mtr.add_suppression("Checksum mismatch in datafile");
call mtr.add_suppression("Corrupted page .* of datafile .*  could not be found in the doublewrite buffer");

CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 CHAR(255), c3 CHAR(255),
      c4 CHAR(255), c5 CHAR(255)) CHARACTER SET latin1 ENGINE=INNODB;

CREATE TABLE t2 (c1 INT PRIMARY KEY, c2 TEXT)
      CHARACTER SET latin1 ENGINE=INNODB;

--echo #
--echo # Prepare the table and flush dirty pages to ensure it doesn't
--echo # produce MLOG_FILE_EXTEND log records later
--echo #
--disable_query_log
INSERT INTO t1 VALUES(1, repeat(1, 255), repeat(1, 255),
    repeat(1, 255), repeat(1, 255));
SET @records = 1;
while(`SELECT @records <= 16`) {
  INSERT INTO t1 SELECT c1 + @records, c2, c3, c4, c5 from t1;
  SET @records = @records*2;
}
FLUSH TABLES t1 FOR EXPORT;
UNLOCK TABLES;

--enable_query_log

let MYSQLD_DATADIR =`SELECT @@datadir`;

--echo #
--echo # Stop the page cleaner and other background threads
--echo #
--source ../include/stop_dirty_page_flushing_and_background_redo_producers.inc

--disable_query_log

--echo #
--echo # Produce the log records without extending the tablespace t1
--echo # size by simply updating the rows in the table
--echo #
SET @records = 1;
while(`SELECT @records <= 32`) {
  UPDATE t1 SET c2 = REPEAT(2, 255), c3 = REPEAT(3, 255),
    c4 = REPEAT(4, 255), c5 = REPEAT(5, 255) WHERE c1 = @records;
 SET @records = @records +1;
}

--echo #
--echo # Insert enough rows to another table t2 so that :
--echo # (1) Size of hash table of log records could exceed max size of the hash table
--echo # (2) Corrupt page of table t1 move out of the double-write buffer
--echo #
SET @records = 1;
INSERT INTO t2 VALUES(@records, REPEAT(@records, 16000));
  SET @records = @records + 1;
while(`SELECT @records <= 512`) {
   INSERT INTO t2 SELECT c1 + @records, REPEAT(@records, 16000) from t2;
  SET @records = @records*2;
}

--enable_query_log

# Set parameters for corrupt_page.inc script
let INNODB_PAGE_SIZE=`SELECT @@innodb_page_size`;
let PAGE_NUM = '0';
let IBD_FILE = $MYSQLD_DATADIR/test/t1.ibd;

--echo
# Kill the server to trigger recovery on start
--source include/kill_mysqld.inc
--echo

--echo
--echo # Copy the tablespace file t1.ibd before corrupting the page
--copy_file $MYSQLD_DATADIR/test/t1.ibd $MYSQLTEST_VARDIR/t1.ibd

--echo
--echo # Corrupt page: $PAGE_NUM in t1.ibd
--echo
# Required parameters are set above ^
--source ../include/corrupt_page.inc

--error 1
--diff_files  $MYSQLD_DATADIR/test/t1.ibd $MYSQLTEST_VARDIR/t1.ibd

let $error_log = $MYSQLTEST_VARDIR/log/my_restart.err;

--echo #
--echo # Start the server with reduced buffer pool size to have smaller batch.
--echo # Crash recovery must detect the tablespace page is corrupt and abort
--echo #
--error 2
--exec $MYSQLD_CMD --nocore  --console --innodb_buffer_pool_size=5M > $error_log 2>&1

let SEARCH_FILE = $error_log;

let $error_name = ER_IB_MSG_399;
--source include/get_error_id.inc
let SEARCH_PATTERN = $error_id;
--source include/search_pattern.inc


let $error_name = ER_IB_MSG_412;
--source include/get_error_id.inc
let SEARCH_PATTERN = $error_id;
--source include/search_pattern.inc

let $error_name = ER_IB_ERR_CORRUPT_TABLESPACE_UNRECOVERABLE;
--source include/get_error_id.inc
let SEARCH_PATTERN = $error_id;
--source include/search_pattern.inc

--echo
--echo # Restore the tablespace file t1.ibd and start the server as usual
--echo
--move_file $MYSQLTEST_VARDIR/t1.ibd $MYSQLD_DATADIR/test/t1.ibd
--let restart_parameters="restart:"
--source include/start_mysqld.inc

--echo
--echo # cleanup
--echo
--remove_file $error_log
let IBD_FILE=;
let PAGE_NUM=;
let INNODB_PAGE_SIZE=;
DROP TABLE t1;
DROP TABLE t2;
