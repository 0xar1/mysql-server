--echo #
--echo # WL#15254: SQL syntax extensions to support external language routines
--echo #

DELIMITER //;

--echo #
--echo # Tests for LANGUAGE clause
--echo #


CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE SQL
  BEGIN RETURN a-1; END //
DROP FUNCTION foo//

--echo # SQL is default
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC
  BEGIN RETURN a-1; END //
DROP FUNCTION foo//

--echo # Currently, no other language than SQL is supported
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE JAVASCRIPT
  BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION JAVASCRIPT(a INTEGER) RETURNS INTEGER DETERMINISTIC
LANGUAGE JAVASCRIPT
  BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE PYTHON
  BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE RUBY
  BEGIN RETURN a-1; END //

--echo # Test lower-case
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE javascript
  BEGIN RETURN a-1; END //

--echo # Test mixed-case
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE jAvaScRIpt
  BEGIN RETURN a-1; END //

--echo # Any valid identifier can be used for language name
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE JAVA1
  BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE $NOLANG
  BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC
LANGUAGE $$JAVASCRIPT
  BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE 123j
  BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE __
  BEGIN RETURN a-1; END //

--error ER_PARSE_ERROR
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC
LANGUAGE "JAVASCRIPT"
  BEGIN RETURN a-1; END //

--error ER_PARSE_ERROR
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC
LANGUAGE 'JAVASCRIPT'
  BEGIN RETURN a-1; END //

--error ER_PARSE_ERROR
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE " "
  BEGIN RETURN a-1; END //

--error ER_PARSE_ERROR
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE J?
  BEGIN RETURN a-1; END //

--error ER_PARSE_ERROR
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC
LANGUAGE \JAVASCRIPT
  BEGIN RETURN a-1; END //

--echo # An identifier may not consist solely of digits
--error ER_PARSE_ERROR
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE 123
  BEGIN RETURN a-1; END //

--echo # MySQL allows multiple clauses for the same characteristics
--echo # (This is not according to SQL standard). Last one will take effect.
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER
LANGUAGE JAVASCRIPT DETERMINISTIC LANGUAGE SQL
  BEGIN RETURN a-1; END //
DROP FUNCTION foo//

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER
LANGUAGE SQL DETERMINISTIC LANGUAGE JAVASCRIPT
  BEGIN RETURN a-1; END //

--echo # Multiple languages in one clause is not allowed
--error ER_PARSE_ERROR
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER
LANGUAGE SQL DETERMINISTIC LANGUAGE JAVASCRIPT PYTHON
  BEGIN RETURN a-1; END //

--echo Check "weird" white space before and after JAVASCRIPT.
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER
LANGUAGE
JAVASCRIPT

  BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER
LANGUAGE	
	 JAVASCRIPT
BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER
LANGUAGE	  	 JAVASCRIPT  DETERMINISTIC	
BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER
LANGUAGE
-- Comment
JAVASCRIPT
-- Comment
BEGIN RETURN a-1; END //

--echo The language will here be interpreted to be BEGIN
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER
DETERMINISTIC LANGUAGE
BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER
LANGUAGE SQL DETERMINISTIC LANGUAGE
BEGIN RETURN a-1; END //

--error ER_PARSE_ERROR
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER
DETERMINISTIC LANGUAGE
BEGIN a-1; END //

--echo #Combinations with other characteristics
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC NO SQL
LANGUAGE JAVASCRIPT
  BEGIN RETURN a-1; END //

CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC NO SQL
LANGUAGE SQL
  BEGIN RETURN a-1; END //
DROP FUNCTION foo//

CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE SQL NO SQL
  BEGIN RETURN a-1; END //
DROP FUNCTION foo//

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE JAVASCRIPT
CONTAINS SQL
  BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC READS SQL DATA
LANGUAGE JAVASCRIPT
  BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE JAVASCRIPT
MODIFIES SQL DATA
  BEGIN RETURN a-1; END //

CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE SQL
CONTAINS SQL
  BEGIN RETURN a-1; END //
DROP FUNCTION foo//

CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC READS SQL DATA
LANGUAGE SQL
  BEGIN RETURN a-1; END //
DROP FUNCTION foo//

CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER DETERMINISTIC LANGUAGE SQL
MODIFIES SQL DATA
  BEGIN RETURN a-1; END //
DROP FUNCTION foo//

CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER NOT DETERMINISTIC LANGUAGE SQL
  BEGIN RETURN a-1; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER NOT DETERMINISTIC
LANGUAGE JAVASCRIPT
  BEGIN RETURN a-1; END //

--echo # This is not SQL
--error ER_PARSE_ERROR
CREATE FUNCTION foo(a INTEGER) RETURNS INTEGER
LANGUAGE SQL DETERMINISTIC LANGUAGE SQL
$$ return a-1; $$ //

--echo # Repeat test cases for PROCEDURE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE SQL
  BEGIN DECLARE b INTEGER DEFAULT a; END //
DROP PROCEDURE bar//

--echo # SQL is default
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC
  BEGIN DECLARE b INTEGER DEFAULT a; END //
DROP PROCEDURE bar//

--echo # Currently, no other language than SQL is supported
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE JAVASCRIPT
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE JAVASCRIPT(a INTEGER) DETERMINISTIC
LANGUAGE JAVASCRIPT
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE PYTHON
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE RUBY
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--echo # Test lower-case
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE javascript
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--echo # Test mixed-case
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE jAvaScRIpt
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--echo # Any valid identifier can be used for language name
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE JAVA1
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE $NOLANG
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE $$JAVASCRIPT
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE 123j
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE __
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_PARSE_ERROR
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE "JAVASCRIPT"
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_PARSE_ERROR
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE 'JAVASCRIPT'
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_PARSE_ERROR
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE " "
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_PARSE_ERROR
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE J?
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_PARSE_ERROR
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE \JAVASCRIPT
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--echo # An identifier may not consist solely of digits
--error ER_PARSE_ERROR
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE 123
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--echo # MySQL allows multiple clauses for the same characteristics
--echo # (This is not according to SQL standard). Last one will take effect.
CREATE PROCEDURE bar(a INTEGER)
LANGUAGE JAVASCRIPT DETERMINISTIC LANGUAGE SQL
  BEGIN DECLARE b INTEGER DEFAULT a; END //
DROP PROCEDURE bar//

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER)
LANGUAGE SQL DETERMINISTIC LANGUAGE JAVASCRIPT
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--echo # Multiple languages in one clause is not allowed
--error ER_PARSE_ERROR
CREATE PROCEDURE bar(a INTEGER)
LANGUAGE SQL DETERMINISTIC LANGUAGE JAVASCRIPT PYTHON
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--echo Check "weird" white space before and after JAVASCRIPT.
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER)
LANGUAGE
JAVASCRIPT

  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER)
LANGUAGE	
	 JAVASCRIPT
BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER)
LANGUAGE	  	 JAVASCRIPT  DETERMINISTIC	
BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER)
LANGUAGE
-- Comment
JAVASCRIPT
-- Comment
BEGIN DECLARE b INTEGER DEFAULT a; END //

--echo The language will here be interpreted to be BEGIN
--error ER_PARSE_ERROR
CREATE PROCEDURE bar(a INTEGER)
DETERMINISTIC LANGUAGE
BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_PARSE_ERROR
CREATE PROCEDURE bar(a INTEGER)
LANGUAGE SQL DETERMINISTIC LANGUAGE
BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_PARSE_ERROR
CREATE PROCEDURE bar(a INTEGER)
DETERMINISTIC LANGUAGE
BEGIN a-1; END //

--echo #Combinations with other characteristics
--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC NO SQL
LANGUAGE JAVASCRIPT
  BEGIN DECLARE b INTEGER DEFAULT a; END //

CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC NO SQL
LANGUAGE SQL
  BEGIN DECLARE b INTEGER DEFAULT a; END //
DROP PROCEDURE bar//

CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE SQL NO SQL
  BEGIN DECLARE b INTEGER DEFAULT a; END //
DROP PROCEDURE bar//

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE JAVASCRIPT
CONTAINS SQL
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC READS SQL DATA
LANGUAGE JAVASCRIPT
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE JAVASCRIPT
MODIFIES SQL DATA
  BEGIN DECLARE b INTEGER DEFAULT a; END //

CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE SQL
CONTAINS SQL
  BEGIN DECLARE b INTEGER DEFAULT a; END //
DROP PROCEDURE bar//

CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC READS SQL DATA
LANGUAGE SQL
  BEGIN DECLARE b INTEGER DEFAULT a; END //
DROP PROCEDURE bar//

CREATE PROCEDURE bar(a INTEGER) DETERMINISTIC LANGUAGE SQL
MODIFIES SQL DATA
  BEGIN DECLARE b INTEGER DEFAULT a; END //
DROP PROCEDURE bar//

CREATE PROCEDURE bar(a INTEGER) NOT DETERMINISTIC LANGUAGE SQL
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--error ER_SP_UNSUPPORTED_LANGUAGE
CREATE PROCEDURE bar(a INTEGER) NOT DETERMINISTIC LANGUAGE JAVASCRIPT
  BEGIN DECLARE b INTEGER DEFAULT a; END //

--echo # This is not SQL
--error ER_PARSE_ERROR
CREATE PROCEDURE bar(a INTEGER)
LANGUAGE SQL DETERMINISTIC LANGUAGE SQL
$$ let b = a; $$ //

--echo # Check ALTER statements
ALTER FUNCTION foo NO SQL //

--echo # When dictionary support is ready, changing language will not be allowed
ALTER FUNCTION foo LANGUAGE SQL NO SQL //
ALTER FUNCTION foo LANGUAGE JAVASCRIPT //
ALTER PROCEDURE bar LANGUAGE JAVASCRIPT //

DROP FUNCTION foo //
DROP PROCEDURE bar //

DELIMITER ;//
